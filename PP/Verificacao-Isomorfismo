//Verifica se dois grafos são isomorfos por meio dos vértices, arestas e Graus.

#include <stdio.h>
#include <stdlib.h>

void limparTela() {
#ifdef _WIN32
    system("cls");
#else
    system("clear");
#endif
}

void lerGrafo(int *n, int *m, int adj[][100], int grafoNum) { 
    limparTela();
    printf("=======================================\n");
    printf("       Entrada do Grafo %d\n", grafoNum);
    printf("=======================================\n");
    
    printf("Digite o numero de vertices: ");
    scanf("%d", n);
    printf("Digite o numero de arestas: ");
    scanf("%d", m);

    for (int i = 0; i < *n; i++)
        for (int j = 0; j < *n; j++)
            adj[i][j] = 0;

    printf("\nDigite as arestas (u v) entre 0 e %d:\n", *n - 1);
    for (int i = 0; i < *m; i++) {
        int u, v;
        printf("Aresta %d: ", i + 1);
        scanf("%d %d", &u, &v);
        if (u < 0 || u >= *n || v < 0 || v >= *n) {
            printf("Vertices invalidos! Digite novamente.\n");
            i--;
            continue;
        }
        adj[u][v] = 1;
        adj[v][u] = 1;
    }
}

//Calculo do grau de cada vértice do grafo
void calcularGraus(int n, int adj[n][n], int graus[]) { 
    for (int i = 0; i < n; i++) {
        graus[i] = 0;
        for (int j = 0; j < n; j++) {
            graus[i] += adj[i][j];
        }
    }
}

//Ordenação do vetor em ordem crescente
void ordenar(int n, int arr[]) {  
    for (int i = 0; i < n-1; i++) {
        for (int j = i+1; j < n; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

 // Compara dois vetores de graus ordenados, retorna 1 se iguais
int compararGraus(int n, int graus1[], int graus2[]) {
    ordenar(n, graus1);
    ordenar(n, graus2);
    for (int i = 0; i < n; i++) {
        if (graus1[i] != graus2[i]) return 0;
    }
    return 1;
}

int main() {
    int n1, m1, n2, m2;
    int adj1[100][100], adj2[100][100];
    int graus1[100], graus2[100];

    lerGrafo(&n1, &m1, adj1, 1);        // Ler grafo 1
    calcularGraus(n1, adj1, graus1);    // Calcular graus do grafo 1

    lerGrafo(&n2, &m2, adj2, 2);        // Ler grafo 2
    calcularGraus(n2, adj2, graus2);    // Calcular graus do grafo 2

    limparTela();
    printf("=======================================\n");
    printf("            Resultados\n");
    printf("=======================================\n");
    printf("G1, G2\n\n");

    printf("Vertices: ");
    if (n1 == n2)
        printf("Ok!\n");
    else
        printf("Nao\n");

    printf("Arestas: ");
    if (m1 == m2)
        printf("Ok!\n");
    else
        printf("Nao\n");

    printf("Grau: ");
    if (n1 == n2 && compararGraus(n1, graus1, graus2))
        printf("Ok!\n");
    else
        printf("Nao\n");

    printf("\nStatus final: ");
    if (n1 == n2 && m1 == m2 && compararGraus(n1, graus1, graus2))
        printf("Pode ser isomorfo!\n");
    else
        printf("Não e isomorfo!\n");

    return 0;
}